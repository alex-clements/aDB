{"version":3,"sources":["hooks/QueryItem.js","hooks/QueryItemList.js","hooks/QueryPanel.js","hooks/MainGrid.js","App.js","reportWebVitals.js","index.js"],"names":["QueryItem","props","useState","dataKeyProps","primary_key","dataValueProps","data","mouseOver","setMouseOver","Card","onMouseEnter","onMouseLeave","onClick","onItemClick","fullWidth","sx","marginTop","backgroundColor","CardContent","Typography","fontSize","color","gutterBottom","JSON","stringify","QueryItemList","queryResult","setQueryResult","useEffect","handleItemClick","e","Object","keys","map","i","QueryPanel","textFieldRef","useRef","updateQueryResultWithNewQueryResult","updatedQueryResult","newQueryResult","entries","key","fetchData","query","query_data","fetch","method","headers","body","then","response","json","result_data","console","log","vetQueryResults","catch","error","width","height","borderRadius","overflow","TextField","ref","onKeyDown","current","children","value","marginBottom","id","label","variant","MainGrid","displayData","setDisplayData","styled","Paper","theme","typography","body2","padding","spacing","textAlign","palette","text","secondary","Grid","container","item","xs","style","App","className","Box","Container","maxWidth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a594a47d.chunk.js","sourcesContent":["import * as React from 'react';\nimport {useState, useEffect} from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\n\nexport default function QueryItem(props) {\n  const [primary_key, setPrimaryKey] = useState(props.dataKeyProps);\n  const [data, setData] = useState(props.dataValueProps);\n  const [mouseOver, setMouseOver] = useState(false);\n\n  const mouseEnter = () => {\n    setMouseOver(true);\n  }\n\n  const mouseLeave = () => {\n    setMouseOver(false);\n  }\n\n  const handleClick = () => {\n    props.onItemClick(data);\n  }\n\n\n\n  return (\n    <Card onMouseEnter={mouseEnter} \n          onMouseLeave={mouseLeave} \n          onClick={handleClick}\n          fullWidth \n          sx={{marginTop: \"10px\", backgroundColor: mouseOver ? \"#FAF9F6\" : \"white\"}}\n          >\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          {JSON.stringify(primary_key)}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n","import * as React from 'react';\nimport QueryItem from \"./QueryItem.js\";\nimport {useState, useEffect} from 'react';\n\nexport default function QueryItemList(props) {\n    const [queryResult, setQueryResult] = useState(props.queryResult);\n\n    useEffect(() => {\n        setQueryResult(props.queryResult);\n    }, [props.queryResult])\n\n    const handleItemClick = (e) => {\n        props.onItemClick(e);\n    }\n\n    return (\n        <div>{Object.keys(queryResult).map(i => (\n            <QueryItem onItemClick={handleItemClick} dataKeyProps={i} dataValueProps={queryResult[i]} />))}</div>\n    )\n}","import * as React from 'react';\nimport QueryItem from \"./QueryItem.js\";\nimport TextField from '@mui/material/TextField';\nimport QueryItemList from \"./QueryItemList.js\";\nimport {useRef, useState, useEffect} from 'react';\nimport { Box } from '@mui/system';\n\nexport default function QueryPanel(props) {\n    const [queryResult, setQueryResult] = useState({})\n    const textFieldRef = useRef(null);\n\n    useEffect(() => {\n        //\n    }, [])\n\n    const checkEnter = (e) => {\n        if (e.key === \"Enter\") {\n            var query = textFieldRef.current.children[1].children[0].value;\n            fetchData(query)\n        }\n    }\n\n    const vetQueryResults = (queryResult) => {\n        if (\"my_query\" in queryResult) {\n            console.log(\"invalid query\")\n            setQueryResult({})\n        } else {\n            updateQueryResultWithNewQueryResult(queryResult);\n            setQueryResult(queryResult);\n        }\n    }\n\n    const updateQueryResultWithNewQueryResult = (updatedQueryResult) => {\n        var newQueryResult = {...queryResult}\n\n        for (const [key, value] of Object.entries(newQueryResult)) {\n            delete newQueryResult[key]\n          }\n\n        setQueryResult(newQueryResult);\n        setQueryResult(updatedQueryResult);\n    }\n\n    const fetchData = (query) => {\n\n        var query_data = {\"my_query\": query}\n\n        fetch('http://127.0.0.1:5000/query', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(query_data),\n          })\n          .then(response => response.json())\n          .then(result_data => {\n            console.log('Success:', result_data);\n            vetQueryResults(result_data);\n          })\n          .catch((error) => {\n            console.error('Error:', error);\n          });\n    }\n\n    const handleItemClick = (e) => {\n        props.onItemClick(e);\n    }\n    \n    return (\n        <div>\n            <Box \n                fullWidth \n                sx={{width: \"100%\", \n                height: \"80vh\", \n                backgroundColor: \"white\",\n                borderRadius: \"5px\",\n                overflow: \"hidden\"}}>\n            <TextField ref={textFieldRef} onKeyDown={checkEnter} fullWidth marginBottom='normal' id=\"outlined-basic\" label=\"Query\" variant=\"standard\" sx={{borderRadius: \"5px\"}} />\n            <Box \n                fullWidth \n                sx={{width: \"100%\", \n                height: \"74vh\", \n                backgroundColor: \"#00d95e\",\n                overflow: \"scroll\"}}>\n                <QueryItemList onItemClick={handleItemClick} queryResult={queryResult} />\n            </Box>\n            </Box>\n        </div>\n    )\n}","import Grid from '@mui/material/Grid';\nimport * as React from 'react';\nimport {useState, useEffect} from 'react';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport TextField from '@mui/material/TextField';\nimport { Box } from '@mui/system';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport QueryItem from \"./QueryItem.js\";\nimport QueryPanel from \"./QueryPanel.js\";\n\nexport default function MainGrid(props) {\n    const [displayData, setDisplayData] = useState(null)\n\n    useEffect(() => {\n        setDisplayData(JSON.stringify({}))\n    }, [])\n\n    const QueryItem = styled(Paper)(({ theme }) => ({\n        ...theme.typography.body2,\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      }));\n\n      const headingStyleProps = {\n          \"color\": \"white\"\n      }\n\n      const handleQueryItemClick = (e) => {\n          setDisplayData(JSON.stringify(e, null, \"\\t\"))\n      }\n\n      \n\n    return (\n        <div>\n                <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <h1 style={headingStyleProps}>aDB</h1>\n                </Grid>\n                <Grid item xs={1}></Grid>\n                <Grid item xs={3}>\n                <QueryPanel onItemClick={handleQueryItemClick} />\n                </Grid>\n                <Grid item xs={7}>\n                <Box \n                fullWidth \n                sx={{width: \"100%\", \n                height: \"80vh\", \n                backgroundColor: \"white\",\n                borderRadius: \"5px\"}}>\n                    <Typography id=\"document-body\" variant=\"body2\">{displayData}</Typography>\n                </Box>\n                </Grid>\n                <Grid item xs={1}></Grid>\n            </Grid>\n      </div>\n    )\n}","import './App.css';\nimport Container from '@mui/material/Container';\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport MainGrid from './hooks/MainGrid.js'\n\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Box sx={{\n        width: \"100vw\",\n        height: \"102vh\",\n        backgroundColor: \"#00d95e\",\n      }}>\n        <Container maxWidth={false}>\n          <MainGrid />\n        </Container>\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}